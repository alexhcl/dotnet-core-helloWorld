# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  name: alexpipeline 

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  asocKey: 'd4b6d69c-cd9c-41c1-40ba-d9e4bfc5164b'
  asocSecret: '4lhJ/vBdMmBntHtidGUjChGyl3Mha0ror+oXZfr2ryYB'
  appId: 'e927691d-2fac-4040-9edb-fff2716c6040'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- powershell: |
    appscan prepare
  displayName: 'Step 1 - Building artifact'
  

- powershell: |
    appscan api_login -u $(asocKey) -P $(asocSecret) -persist
  displayName: 'Step 2 - Login'

- powershell: |
    appscan queue_analysis -a $(appId) -n AzurePipelineScanOnDotNet
  displayName: 'Step 3 - Upload and queue scan'
